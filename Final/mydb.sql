-- MySQL Script generated by MySQL Workbench
-- Sun Dec  5 18:38:53 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Hospital`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Hospital` (
  `HospitalName` VARCHAR(255) NOT NULL,
  `Address` VARCHAR(255) NULL,
  `PhoneNumber` VARCHAR(15) NULL,
  PRIMARY KEY (`HospitalName`),
  UNIQUE INDEX `HospitalName_UNIQUE` (`HospitalName` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Doctor` (
  `DoctorID` INT NOT NULL,
  `DoctorName` VARCHAR(45) NOT NULL,
  `Specialty` VARCHAR(45) NOT NULL,
  `HospitalName` VARCHAR(255) NOT NULL,
  `DoctorID` INT NOT NULL,
  PRIMARY KEY (`DoctorID`),
  UNIQUE INDEX `DoctorID_UNIQUE` (`DoctorID` ASC) VISIBLE,
  INDEX `fk_Doctor_Hospital1_idx` (`HospitalName` ASC) VISIBLE,
  INDEX `fk_Doctor_Doctor1_idx` (`DoctorID` ASC) VISIBLE,
  CONSTRAINT `fk_Doctor_Hospital1`
    FOREIGN KEY (`HospitalName`)
    REFERENCES `Hospital_Data`.`Hospital` (`HospitalName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Doctor_Doctor1`
    FOREIGN KEY (`DoctorID`)
    REFERENCES `Hospital_Data`.`Doctor` (`DoctorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;




-- -----------------------------------------------------
-- Table `mydb`.`Patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Patient` (
  `PatientID` INT NOT NULL,
  `PatientName` VARCHAR(45) NOT NULL,
  `PatientPhoneNum` VARCHAR(15) NULL,
  `Description` VARCHAR(255) NULL,
  `DoctorID` INT NOT NULL,
  `HospitalName` VARCHAR(255) NOT NULL,
  `DOB` DATETIME NULL,
  PRIMARY KEY (`PatientID`),
  UNIQUE INDEX `PatientID_UNIQUE` (`PatientID` ASC) VISIBLE,
  INDEX `fk_Patient_Doctor_idx` (`DoctorID` ASC) VISIBLE,
  INDEX `fk_Patient_Hospital1_idx` (`HospitalName` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_Doctor`
    FOREIGN KEY (`DoctorID`)
    REFERENCES `mydb`.`Doctor` (`DoctorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_Hospital1`
    FOREIGN KEY (`HospitalName`)
    REFERENCES `mydb`.`Hospital` (`HospitalName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`OperationTheaters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`OperationTheaters` (
  `Op_Theater_ID` INT NOT NULL,
  `HospitalName` VARCHAR(255) NULL,
  PRIMARY KEY (`Op_Theater_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ICU`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ICU` (
  `ICUID` INT NOT NULL,
  `HospitalName` VARCHAR(255) NULL,
  PRIMARY KEY (`ICUID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Rooms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Rooms` (
  `RoomNumber` INT NOT NULL,
  `Floor` INT NULL,
  `HospitalName` VARCHAR(255) NOT NULL,
  `Op_Theater_ID` INT NOT NULL,
  `ICUID` INT NOT NULL,
  PRIMARY KEY (`RoomNumber`, `ICUID`, `Op_Theater_ID`),
  INDEX `fk_Rooms_Hospital1_idx` (`HospitalName` ASC) VISIBLE,
  INDEX `fk_Rooms_OperationTheaters1_idx` (`Op_Theater_ID` ASC) VISIBLE,
  INDEX `fk_Rooms_ICU1_idx` (`ICUID` ASC) VISIBLE,
  CONSTRAINT `fk_Rooms_Hospital1`
    FOREIGN KEY (`HospitalName`)
    REFERENCES `mydb`.`Hospital` (`HospitalName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rooms_OperationTheaters1`
    FOREIGN KEY (`Op_Theater_ID`)
    REFERENCES `mydb`.`OperationTheaters` (`Op_Theater_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rooms_ICU1`
    FOREIGN KEY (`ICUID`)
    REFERENCES `mydb`.`ICU` (`ICUID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Disease`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Disease` (
  `DiseaseName` VARCHAR(255) NOT NULL,
  `Symptoms` VARCHAR(255) NULL,
  `PatientID` INT NOT NULL,
  PRIMARY KEY (`DiseaseName`),
  INDEX `fk_Disease_Patient1_idx` (`PatientID` ASC) VISIBLE,
  CONSTRAINT `fk_Disease_Patient1`
    FOREIGN KEY (`PatientID`)
    REFERENCES `mydb`.`Patient` (`PatientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Treatment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Treatment` (
  `TreatmentID` INT NOT NULL,
  `Description` VARCHAR(255) NULL,
  `NumberOfDays` INT NULL,
  `DiseaseName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`TreatmentID`),
  UNIQUE INDEX `TreatmentID_UNIQUE` (`TreatmentID` ASC) VISIBLE,
  INDEX `fk_Treatment_Disease1_idx` (`DiseaseName` ASC) VISIBLE,
  CONSTRAINT `fk_Treatment_Disease1`
    FOREIGN KEY (`DiseaseName`)
    REFERENCES `mydb`.`Disease` (`DiseaseName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Nurse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Nurse` (
  `NurseID` INT NOT NULL,
  `NurseName` VARCHAR(45) NULL,
  `HospitalName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`NurseID`),
  UNIQUE INDEX `NurseID_UNIQUE` (`NurseID` ASC) VISIBLE,
  INDEX `fk_Nurse_Hospital1_idx` (`HospitalName` ASC) VISIBLE,
  CONSTRAINT `fk_Nurse_Hospital1`
    FOREIGN KEY (`HospitalName`)
    REFERENCES `mydb`.`Hospital` (`HospitalName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`WardBoys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`WardBoys` (
  `WardBoyID` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `HospitalName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`WardBoyID`),
  UNIQUE INDEX `WardBoyID_UNIQUE` (`WardBoyID` ASC) VISIBLE,
  INDEX `fk_WardBoys_Hospital1_idx` (`HospitalName` ASC) VISIBLE,
  CONSTRAINT `fk_WardBoys_Hospital1`
    FOREIGN KEY (`HospitalName`)
    REFERENCES `mydb`.`Hospital` (`HospitalName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Patient_has_Nurse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Patient_has_Nurse` (
  `PatientID` INT NOT NULL,
  `NurseID` INT NOT NULL,
  PRIMARY KEY (`PatientID`, `NurseID`),
  INDEX `fk_Patient_has_Nurse_Nurse1_idx` (`NurseID` ASC) VISIBLE,
  INDEX `fk_Patient_has_Nurse_Patient1_idx` (`PatientID` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_has_Nurse_Patient1`
    FOREIGN KEY (`PatientID`)
    REFERENCES `mydb`.`Patient` (`PatientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_has_Nurse_Nurse1`
    FOREIGN KEY (`NurseID`)
    REFERENCES `mydb`.`Nurse` (`NurseID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Patient_has_WardBoys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Patient_has_WardBoys` (
  `PatientID` INT NOT NULL,
  `WardBoyID` INT NOT NULL,
  PRIMARY KEY (`PatientID`, `WardBoyID`),
  INDEX `fk_Patient_has_WardBoys_WardBoys1_idx` (`WardBoyID` ASC) VISIBLE,
  INDEX `fk_Patient_has_WardBoys_Patient1_idx` (`PatientID` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_has_WardBoys_Patient1`
    FOREIGN KEY (`PatientID`)
    REFERENCES `mydb`.`Patient` (`PatientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_has_WardBoys_WardBoys1`
    FOREIGN KEY (`WardBoyID`)
    REFERENCES `mydb`.`WardBoys` (`WardBoyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- Insert statements with sample data to populate database for comparison testing
INSERT INTO Hospital
VALUES('Grey Sloan Memorial Hospital', '15000 Centennial Drive Seattle,WA', '151-632-1549'); 

INSERT INTO Doctor
VALUES(637, 'Dr. Gray', 'Internal Medicine', 'Grey Sloan Memorial Hospital');

INSERT INTO Doctor
VALUES(545, 'Dr. Rose', 'Surgeon', 'Grey Sloan Memorial Hospital');

INSERT INTO Doctor
VALUES(615, 'Dr. Rider', 'Pediatrics', 'Grey Sloan Memorial Hospital');

INSERT INTO Nurse
VALUES(123, 'Sarah', 'Grey Sloan Memorial Hospital');

INSERT INTO Nurse
VALUES(357, 'Max', 'Grey Sloan Memorial Hospital');

INSERT INTO Nurse
VALUES(235, 'Alex', 'Grey Sloan Memorial Hospital');

INSERT INTO WardBoys
VALUES(369, 'Josh', 'Grey Sloan Memorial Hospital');

INSERT INTO WardBoys
VALUES(797, 'Sam', 'Grey Sloan Memorial Hospital');

INSERT INTO Patient
VALUES(111, 'Isabella', 737-825-6464, 'Patient admitted late last night vomiting..', 637, 'Grey Sloan Memorial Hospital', '1985-05-15');

INSERT INTO Patient
VALUES(112, 'Marc', 232-597-7271, 'Car accident, surgery needed', 545, 'Grey Sloan Memorial Hospital', '1976-08-23');

INSERT INTO Patient
VALUES(113, 'Anthony', 777-431-1897, 'Coughing and fever', 615, 'Grey Sloan Memorial Hospital', '2015-01-12');

INSERT INTO Patient
VALUES(114, 'Jessica', 659-838-1453, 'Numb hands and feet', 637, 'Grey Sloan Memorial Hospital', '1958-06-04');
 
 INSERT INTO Disease
 VALUES('Accidents', 'Body pain, broken bones, numbness', 112);
 
 INSERT INTO Disease
 VALUES('Diabetes', 'Frequent urination, extreme thirst, fatigue, tingly hands/feet', 111);
 
 -- Update statement 
 UPDATE Disease
 SET DiseaseName = 'Diabetes'
 WHERE PatientID = 114;
 
INSERT INTO Disease
VALUES('Stomach Flu', 'Nausea, vomiting, diarrhea', 111);

INSERT INTO Disease
VALUES('Whooping Cough', 'Runny nose, cough, fever', 113);

INSERT INTO Treatment
VALUES(444, 'Insulin', 7, 'Diabetes'); 

INSERT INTO Treatment
VALUES(555, 'Surgery', 14, 'Accidents');

INSERT INTO Treatment
VALUES(787, 'Ondanestron: nausea medication', 2, 'Stomach Flu');

INSERT INTO Treatment
VALUES(999, 'Antibiotics: Clarithromycin', 4, 'Whooping Cough');

INSERT INTO OperationTheaters
VALUES(18, 'Grey Sloan Memorial Hospital');

INSERT INTO OperationTheaters
VALUES(19, 'Grey Sloan Memorial Hospital');

INSERT INTO ICU
VALUES(21, 'Grey Sloan Memorial Hospital');

INSERT INTO Rooms
VALUES(213, 2, 'Grey Sloan Memorial Hospital', 0, 21);

INSERT INTO Rooms
VALUES(191, 1, 'Grey Sloan Memorial Hospital', 18, 0);

INSERT INTO Patient_has_Nurse
VALUES(114, 357);

INSERT INTO Patient_has_WardBoys
VALUES(111, 369);

INSERT INTO Disease
VALUES('COVID', 'Cough, body aches, difficulty breathing', 114);

-- Delete statement
DELETE FROM Disease WHERE DiseaseName = 'COVID';

-- Truncate statement
TRUNCATE TABLE Patient_has_WardBoys;

-- Left outer join & order by 
SELECT Disease.DiseaseName, Treatment.NumberOfDays
FROM Disease
LEFT JOIN Treatment ON Disease.DiseaseName = Treatment.DiseaseName
ORDER BY Disease.DiseaseName;

-- Right outer join & order by 
SELECT Disease.DiseaseName, Treatment.NumberOfDays
FROM Disease
RIGHT JOIN Treatment ON Disease.DiseaseName = Treatment.DiseaseName
ORDER BY Disease.DiseaseName DESC;

-- Sum aggregate function
SELECT SUM(NumberOfDays)
FROM Treatment;

-- Minimum aggregate function
SELECT MIN(NumberOfDays)
FROM Treatment;

-- Maximum aggregate function
SELECT MAX(NumberOfDays)
FROM Treatment
WHERE DiseaseName = 'Whooping Cough';

-- Group by & having statement
SELECT COUNT(DoctorName)
FROM Doctor
GROUP BY Specialty
HAVING Count(Doctor.DoctorName) <= 2;

-- Between & where statement
SELECT NurseID
FROM Nurse
WHERE NurseID BETWEEN 120 AND 125;

-- Derived attribute Age
SELECT year(CURRENT_TIMESTAMP) - (SELECT year(DOB) FROM Patient WHERE Patient.PatientName = 'Marc') AS 'Age';
